{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactoryadf17"
		},
		"adlsApiCsv_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlsApiCsv'"
		},
		"ls_adf_test_data_perm_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adf_test_data_perm'"
		},
		"ls_adls_hospital_admissions_csv_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_hospital_admissions_csv'"
		},
		"ls_adls_sink_service_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_sink_service'"
		},
		"ls_errors_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_errors'"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.tvmaze.com/singlesearch/shows?q=game%20of%20thrones&embed=episodes"
		},
		"adlsApiCsv_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount17dl.dfs.core.windows.net/"
		},
		"apiRestTesting_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.tvmaze.com/singlesearch/shows?q=game%20of%20thrones&embed=episodes"
		},
		"ls_adf_test_data_perm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount17dl.dfs.core.windows.net/"
		},
		"ls_adls_hospital_admissions_csv_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount17dl.dfs.core.windows.net/"
		},
		"ls_adls_sink_service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageaccount17dl.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_test_api')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyRESTDataToSink",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['url']"
										},
										"sink": {
											"name": "url"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name"
										}
									},
									{
										"source": {
											"path": "$['type']"
										},
										"sink": {
											"name": "type"
										}
									},
									{
										"source": {
											"path": "$['language']"
										},
										"sink": {
											"name": "language"
										}
									},
									{
										"source": {
											"path": "$['genres'][0]"
										},
										"sink": {
											"name": "genres']["
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"name": "status"
										}
									},
									{
										"source": {
											"path": "$['runtime']"
										},
										"sink": {
											"name": "runtime"
										}
									},
									{
										"source": {
											"path": "$['averageRuntime']"
										},
										"sink": {
											"name": "averageRuntime"
										}
									},
									{
										"source": {
											"path": "$['premiered']"
										},
										"sink": {
											"name": "premiered"
										}
									},
									{
										"source": {
											"path": "$['ended']"
										},
										"sink": {
											"name": "ended"
										}
									},
									{
										"source": {
											"path": "$['officialSite']"
										},
										"sink": {
											"name": "officialSite"
										}
									},
									{
										"source": {
											"path": "$['schedule']['time']"
										},
										"sink": {
											"name": "time"
										}
									},
									{
										"source": {
											"path": "$['schedule']['days'][0]"
										},
										"sink": {
											"name": "schedule_days']["
										}
									},
									{
										"source": {
											"path": "$['rating']['average']"
										},
										"sink": {
											"name": "rating_average"
										}
									},
									{
										"source": {
											"path": "$['weight']"
										},
										"sink": {
											"name": "weight"
										}
									},
									{
										"source": {
											"path": "$['network']['id']"
										},
										"sink": {
											"name": "network_id"
										}
									},
									{
										"source": {
											"path": "$['network']['name']"
										},
										"sink": {
											"name": "network_name"
										}
									},
									{
										"source": {
											"path": "$['network']['country']['name']"
										},
										"sink": {
											"name": "network_country_name"
										}
									},
									{
										"source": {
											"path": "$['network']['country']['code']"
										},
										"sink": {
											"name": "code"
										}
									},
									{
										"source": {
											"path": "$['network']['country']['timezone']"
										},
										"sink": {
											"name": "timezone"
										}
									},
									{
										"source": {
											"path": "$['network']['officialSite']"
										},
										"sink": {
											"name": "network_officialSite"
										}
									},
									{
										"source": {
											"path": "$['webChannel']"
										},
										"sink": {
											"name": "webChannel"
										}
									},
									{
										"source": {
											"path": "$['dvdCountry']"
										},
										"sink": {
											"name": "dvdCountry"
										}
									},
									{
										"source": {
											"path": "$['externals']['tvrage']"
										},
										"sink": {
											"name": "tvrage"
										}
									},
									{
										"source": {
											"path": "$['externals']['thetvdb']"
										},
										"sink": {
											"name": "thetvdb"
										}
									},
									{
										"source": {
											"path": "$['externals']['imdb']"
										},
										"sink": {
											"name": "imdb"
										}
									},
									{
										"source": {
											"path": "$['image']['medium']"
										},
										"sink": {
											"name": "image_medium"
										}
									},
									{
										"source": {
											"path": "$['image']['original']"
										},
										"sink": {
											"name": "image_original"
										}
									},
									{
										"source": {
											"path": "$['summary']"
										},
										"sink": {
											"name": "summary"
										}
									},
									{
										"source": {
											"path": "$['updated']"
										},
										"sink": {
											"name": "updated"
										}
									},
									{
										"source": {
											"path": "$['_links']['self']['href']"
										},
										"sink": {
											"name": "_links_self_href"
										}
									},
									{
										"source": {
											"path": "$['_links']['previousepisode']['href']"
										},
										"sink": {
											"name": "_links_previousepisode_href"
										}
									},
									{
										"source": {
											"path": "$['_links']['previousepisode']['name']"
										},
										"sink": {
											"name": "_links_previousepisode_name"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['id']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['id"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['url']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['url"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['name']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['name"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['season']"
										},
										"sink": {
											"name": "season"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['number']"
										},
										"sink": {
											"name": "number"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['type']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['type"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['airdate']"
										},
										"sink": {
											"name": "airdate"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['airtime']"
										},
										"sink": {
											"name": "airtime"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['airstamp']"
										},
										"sink": {
											"name": "airstamp"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['runtime']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['runtime"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['rating']['average']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['rating_average"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['image']['medium']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['image_medium"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['image']['original']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['image_original"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['summary']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['summary"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['_links']['self']['href']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['_links_self_href"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['_links']['show']['href']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['_links_show_href"
										}
									},
									{
										"source": {
											"path": "$['_embedded']['episodes'][0]['_links']['show']['name']"
										},
										"sink": {
											"name": "_embedded_episodes'][0]['_links_show_name"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "apiCsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/apiCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_test_data_perm_move')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_test_data_perm",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_test_data_perm",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceTestDataPerm": {},
									"sinkTestDataPermTMinus1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_test_data_perm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsApiCsv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "language",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "runtime",
						"type": "String"
					},
					{
						"name": "averageRuntime",
						"type": "String"
					},
					{
						"name": "premiered",
						"type": "String"
					},
					{
						"name": "ended",
						"type": "String"
					},
					{
						"name": "officialSite",
						"type": "String"
					},
					{
						"name": "weight",
						"type": "String"
					},
					{
						"name": "webChannel",
						"type": "String"
					},
					{
						"name": "dvdCountry",
						"type": "String"
					},
					{
						"name": "summary",
						"type": "String"
					},
					{
						"name": "updated",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsApiCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "apiRestTesting",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/apiRestTesting')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlsApiCsv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csv",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/adlsApiCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_country_lookup_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_hospital_admissions_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_hospital_admissions_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hospital_admissions_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_hospital_admissions_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_hospital_admissions_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_test_data_perm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adf_test_data_perm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test_data_perm.csv",
						"folderPath": "adfTestData",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adf_test_data_perm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsApiCsv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlsApiCsv_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlsApiCsv_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/apiRestTesting')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('apiRestTesting_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adf_test_data_perm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adf_test_data_perm_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adf_test_data_perm_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_hospital_admissions_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_hospital_admissions_csv_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_hospital_admissions_csv_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_sink_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_sink_service_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_sink_service_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_errors')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_errors_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_api_csv')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "apiCsv",
								"type": "DatasetReference"
							},
							"name": "sourceAPI"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sinkAPICSV"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceAPI",
						"sourceAPI foldDown(unroll(),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as string,",
						"          url as string,",
						"          name as string,",
						"          type as string,",
						"          language as string,",
						"          status as string,",
						"          runtime as string,",
						"          averageRuntime as string,",
						"          premiered as string,",
						"          ended as string,",
						"          officialSite as string,",
						"          weight as string,",
						"          webChannel as string,",
						"          dvdCountry as string,",
						"          summary as string,",
						"          updated as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkAPICSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/apiCsv')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_hospital_admissions_country_lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospital_admissions_csv",
								"type": "DatasetReference"
							},
							"name": "sourceHospitalAdmissions"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup_csv",
								"type": "DatasetReference"
							},
							"name": "sourceCountryLookup"
						}
					],
					"sinks": [
						{
							"name": "sinkHospitalAdmissionsCountryLookup"
						}
					],
					"transformations": [
						{
							"name": "joinHospitalAdmissionsWithCountryLookup"
						},
						{
							"name": "selectRequiredColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as date,",
						"          year_week as string,",
						"          value as integer,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceHospitalAdmissions",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceCountryLookup",
						"sourceHospitalAdmissions, sourceCountryLookup join(upper(sourceHospitalAdmissions@country) == upper(sourceCountryLookup@country),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinHospitalAdmissionsWithCountryLookup",
						"joinHospitalAdmissionsWithCountryLookup select(mapColumn(",
						"          country = sourceHospitalAdmissions@country,",
						"          indicator,",
						"          date,",
						"          year_week,",
						"          value,",
						"          source,",
						"          url,",
						"          country = sourceCountryLookup@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectRequiredColumns",
						"selectRequiredColumns sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sinkHospitalAdmissionsCountryLookup"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_hospital_admissions_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_country_lookup_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_test_data_perm')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_test_data_perm",
								"type": "DatasetReference"
							},
							"name": "sourceTestDataPerm"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_adls_sink_service",
								"type": "LinkedServiceReference"
							},
							"name": "sinkTestDataPermTMinus1",
							"rejectedDataLinkedService": {
								"referenceName": "ls_errors",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "testDataPermTs"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as string,",
						"          monToFri as boolean,",
						"          sunToThu as boolean,",
						"          monToSun as boolean,",
						"          offPremisesAuth as boolean,",
						"          offHoursAuth as boolean",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceTestDataPerm",
						"sourceTestDataPerm derive(insertedTimestamp = currentUTC(),",
						"          surrogateKey = uuid()) ~> testDataPermTs",
						"testDataPermTs sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'processed',",
						"     folderPath: 'adfTestData',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'errors',",
						"     assertFailure_folderPath: 'errors') ~> sinkTestDataPermTMinus1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_test_data_perm')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_sink_service')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_errors')]"
			]
		}
	]
}